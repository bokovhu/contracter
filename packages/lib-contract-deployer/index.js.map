{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["\r\nconst AUTH_KEY = \"contracter.auth\";\r\n\r\nclass ContractDeployerImpl {\r\n\r\n    private _rpcUrl: string = \"\";\r\n\r\n    constructor() {\r\n\r\n        const persistedAuthData = localStorage.getItem(AUTH_KEY);\r\n        if (persistedAuthData) {\r\n            const authData = JSON.parse(persistedAuthData);\r\n            this._rpcUrl = authData.network;\r\n        }\r\n\r\n    }\r\n\r\n    async deployContract(\r\n        bundleData: any\r\n    ): Promise<string> {\r\n\r\n        const promise = new Promise<string>(\r\n            (resolve, reject) => {\r\n                setTimeout(\r\n                    () => reject(\"Not yet supported\"),\r\n                    1000\r\n                );\r\n            }\r\n        );\r\n\r\n        return await promise;\r\n\r\n    }\r\n\r\n}\r\n\r\nconst contractDeployerInstance = new ContractDeployerImpl();\r\n\r\nexport const deployContract = contractDeployerInstance.deployContract.bind(contractDeployerInstance);\r\n"],
  "mappings": "4bAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,oBAAAE,IACA,IAAMC,EAAW,kBAEXC,EAAN,KAA2B,CAEf,QAAkB,GAE1B,aAAc,CAEV,IAAMC,EAAoB,aAAa,QAAQF,CAAQ,EACvD,GAAIE,EAAmB,CACnB,IAAMC,EAAW,KAAK,MAAMD,CAAiB,EAC7C,KAAK,QAAUC,EAAS,OAC5B,CAEJ,CAEA,MAAM,eACFC,EACe,CAWf,OAAO,MATS,IAAI,QAChB,CAACC,EAASC,IAAW,CACjB,WACI,IAAMA,EAAO,mBAAmB,EAChC,GACJ,CACJ,CACJ,CAIJ,CAEJ,EAEMC,EAA2B,IAAIN,EAExBF,EAAiBQ,EAAyB,eAAe,KAAKA,CAAwB",
  "names": ["src_exports", "__export", "deployContract", "AUTH_KEY", "ContractDeployerImpl", "persistedAuthData", "authData", "bundleData", "resolve", "reject", "contractDeployerInstance"]
}
