var DegenContractRegistry=(()=>{var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var l=(n,t)=>{for(var c in t)o(n,c,{get:t[c],enumerable:!0})},h=(n,t,c,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of d(t))!C.call(n,r)&&r!==c&&o(n,r,{get:()=>t[r],enumerable:!(a=p(t,r))||a.enumerable});return n};var u=n=>h(o({},"__esModule",{value:!0}),n);var m={};l(m,{createContract:()=>_,deleteContract:()=>b,listContracts:()=>g,updateContract:()=>f});var e="contracter.contractRegistry",i=class{_contracts=[];constructor(){let t=localStorage.getItem(e);t&&(this._contracts=JSON.parse(t))}async flush(){localStorage.setItem(e,JSON.stringify(this._contracts))}async listContracts(){return this._contracts}async createContract(t){let c=Math.random().toString(36).substring(7)+`${new Date().getTime()}`,a=Object.assign({},t,{id:c});this._contracts.push(a),await this.flush()}async deleteContract(t){this._contracts=this._contracts.filter(c=>c.id!==t),await this.flush()}async updateContract(t){let c=this._contracts.findIndex(a=>a.id===t.id);c!==-1&&(this._contracts[c]=t),await this.flush()}},s=new i,g=s.listContracts.bind(s),_=s.createContract.bind(s),b=s.deleteContract.bind(s),f=s.updateContract.bind(s);return u(m);})();
//# sourceMappingURL=index.js.map
